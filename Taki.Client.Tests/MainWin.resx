<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABG
        BQAAAk1TRnQBSQFMAwEBAAEoAQABKAEAASABAAEgAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABGAYAATA5AAPzA+cD5QPkA+cV6gPoCecD8/8ATgAD5wPMA8YDwAPMFdcD0gnMA+f/AEgA
        A/QD6gPhA9sD2APVA9sV4QPeA9sCrgHUAoABzALHAeMD9AP3/wBCAAPqA9cD4SfqAo8B2wIzAcwCmQHm
        A/8D9P8AQgAD6APSA94n6gK9AeMCjwHbAscB7gP/A/T/AEIAA+cDzAPbLeoD9QP/A/T/ADwAA/MD5wPZ
        A8wD2y3qA/UD/wP0/wA8AAPnCcwD2y3qA/UD/wP0/wA8AAPrA9sD1wPSA+AD7gPsJ+oD9QP/A/T/ADwA
        A+4D6gPhA9cD5APxA+4n6gP1A/8D9P8ANgAD9QPrA+gD6gPjA9oD5gPxA/AP7gPsFeoD9QP/A/T/ADYA
        A+sD3QPkA+oD5APdA+cV8QPuFeoD9QP/A/T/ADYAA+4D5wPrA+4D5APaA+YP8QG9AbUB3gGJAXkBywGI
        AXcBygGGAXUByAG6AbIB2wPuA+wJ6gP1A/8D9P8ANgAD8AnxA+QD1wPkD/EBiQF5AcsBIQEAAaUBIQEA
        AaUBIQEAAaUBiQF5AcsD8QPuCeoD9QP/A/T/ADAAA/YD8APuA/ED8APuA+MD1wPkD/EBiQF5AcsBIQEA
        AaUBIQEAAaUBIQEAAaUBiQF5AcsD8QPwCe4D9wP/A/T/ADAAA/AJ8QPuA+oD4QPXA+QP8QGJAXkBywEh
        AQABpQEhAQABpQEhAQABpQGJAXkByw/xA/gD/wP0/wAwAAPwCfED8APuA+MD1wPkD/EBvQG1Ad4BiQF5
        AcsBiQF5AcsBiQF5AcsBvQG1Ad4P8QP4A/8D9P8AMAAD8A/xA+QD1wPkLfED+AP/A/T/ADAAA/AD8QPu
        A+oD7gPxA+YD2gPmLfED+AP/A/T/ADAAA/AD8QPqA+MD6gPxA+cD3QPnLfED+AP/A/T/ACoAA/cD9APE
        A3kDtQnxA+cD3QPrD/gD9RvxA/gD/wP0/wAqAAP0A/8DgAMAA4AD/wP4A/ED5wPdA+4P/wP4G/ED+AP/
        A/T/ACoAA/QD/wOAAwADgAP/A/wD+APsA+ABvQGwAeMBmQGAAeYBzAHAAfMJ/wP8D/gD9QnxA/gD/wP0
        /wAqAAP0A/8DgAMAA4AJ/wPxA+MBiwFyAdgBMwEAAcwBmQGAAeYb/wP4CfED+AP/A/T/ACoAA/cD9APH
        A4ADwAn/A/AD4AG9AbAB4wGZAYAB5gHMAcAB8xv/A/wJ+AP8A/8D9P8AMAAD9A//A+4D3QPuM/8D9P8A
        MAAD9wn0A/cD/wP3A+4D9wn/A/wD+AP3A/UD8hv0A/f/ADwAA/QV/wP4A/ED7gPqA+7/AFoAA/cJ9AP3
        Cf8D/AP4A/AD7gP1/wBmAAP0D/8D9P8AbAAD9wn0A/MD+APy/wB4AAPwA/ED8P8ARQABQgFNAT4HAAE+
        AwABKAMAAYADAAEgAwABAQEAAQEGAAECFgAD/wEAAf8B+AEAAQMMAAH/AfgBAAEDDAAB/wHgDgAB/wHg
        DgAB/wHgDgAB/wHgDgAB/wGADgAB/wGADgAB/wGADgAB/wGADgAB/g8AAf4PAAH+DwAB/g8AAfgPAAH4
        DwAB+A8AAfgPAAH4DwAB+A8AAeAPAAHgDwAB4A8AAeAPAAHgDwAB+A8AAfgPAAH/AYABAwH/DAAB/wGA
        AQMB/wwAAf8B+AEPAf8MAAH/AfgBDwH/DAAC/wGPAf8MAAs=
</value>
  </data>
</root>